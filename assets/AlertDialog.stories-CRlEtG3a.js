import{r as o,R as i}from"./index-yUhCOHB4.js";import{c as J}from"./index-DQXGlRzm.js";import{u as b,a as K}from"./index-CLdCKqIz.js";import{c as T,R as Q,T as U,C as w,P as X,W as Z,a as ee,b as te,D as ae,O as oe}from"./index-k_fsUSc7.js";import{c as re}from"./index-D4ukzbp3.js";import{j as n}from"./jsx-runtime-DBhXMc9n.js";import{c as d}from"./index-DcuGh8cT.js";import{B as x}from"./Button-C9t4LVQ2.js";import"./index-z4ifl892.js";import"./index-BlA1p_hj.js";import"./index-Da_IA54p.js";import"./index-DLnfOhia.js";import"./index-9HIxi_yA.js";import"./index-C1ppjEGk.js";import"./index-Bt0LB2xV.js";import"./index-CanQ0flI.js";var O="AlertDialog",[le,Fe]=J(O,[T]),s=T(),P=e=>{const{__scopeAlertDialog:t,...a}=e,r=s(t);return n.jsx(Q,{...r,...a,modal:!0})};P.displayName=O;var ne="AlertDialogTrigger",S=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,l=s(a);return n.jsx(U,{...l,...r,ref:t})});S.displayName=ne;var ie="AlertDialogPortal",j=e=>{const{__scopeAlertDialog:t,...a}=e,r=s(t);return n.jsx(X,{...r,...a})};j.displayName=ie;var se="AlertDialogOverlay",I=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,l=s(a);return n.jsx(oe,{...l,...r,ref:t})});I.displayName=se;var c="AlertDialogContent",[ce,de]=le(c),$=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,children:r,...l}=e,u=s(a),g=o.useRef(null),q=b(t,g),E=o.useRef(null);return n.jsx(Z,{contentName:c,titleName:M,docsSlug:"alert-dialog",children:n.jsx(ce,{scope:a,cancelRef:E,children:n.jsxs(ee,{role:"alertdialog",...u,...l,ref:q,onOpenAutoFocus:re(l.onOpenAutoFocus,p=>{var _;p.preventDefault(),(_=E.current)==null||_.focus({preventScroll:!0})}),onPointerDownOutside:p=>p.preventDefault(),onInteractOutside:p=>p.preventDefault(),children:[n.jsx(K,{children:r}),n.jsx(me,{contentRef:g})]})})})});$.displayName=c;var M="AlertDialogTitle",F=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,l=s(a);return n.jsx(te,{...l,...r,ref:t})});F.displayName=M;var B="AlertDialogDescription",H=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,l=s(a);return n.jsx(ae,{...l,...r,ref:t})});H.displayName=B;var pe="AlertDialogAction",ge=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,l=s(a);return n.jsx(w,{...l,...r,ref:t})});ge.displayName=pe;var z="AlertDialogCancel",L=o.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,{cancelRef:l}=de(z,a),u=s(a),g=b(t,l);return n.jsx(w,{...u,...r,ref:g})});L.displayName=z;var me=({contentRef:e})=>{const t=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${B}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return o.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},ue=P,De=S,fe=j,G=I,V=$,Ae=L,W=F,k=H;const Y=ue,ve=De,ye=fe,Ne=Ae,D=o.forwardRef(({className:e,...t},a)=>o.createElement(G,{className:d("bg-background/80 fixed inset-0 z-50 bg-black opacity-20 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:a}));D.displayName=G.displayName;const f=o.forwardRef(({className:e,...t},a)=>o.createElement(ye,null,o.createElement(D,null),o.createElement(V,{ref:a,className:d("sm:rounded-lg fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] rounded-md bg-theme-surface-primary shadow-md duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%]  data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] md:w-full",e),...t})));f.displayName=V.displayName;const A=({className:e,...t})=>o.createElement("div",{className:d("flex items-center justify-between border-b border-theme-border-moderate py-2 pl-5 pr-3",e),...t});A.displayName="AlertDialogHeader";const v=({className:e,...t})=>o.createElement("div",{className:d("flex justify-end border-t border-theme-border-moderate px-5 py-3",e),...t});v.displayName="AlertDialogFooter";const y=o.forwardRef(({className:e,...t},a)=>o.createElement(W,{ref:a,className:d("text-text-lg font-semibold",e),...t}));y.displayName=W.displayName;const N=o.forwardRef(({className:e,...t},a)=>o.createElement(k,{ref:a,className:d("text-sm text-muted-foreground",e),...t}));N.displayName=k.displayName;D.__docgenInfo={description:"",methods:[]};f.__docgenInfo={description:"",methods:[]};A.__docgenInfo={description:"",methods:[],displayName:"AlertDialogHeader"};v.__docgenInfo={description:"",methods:[],displayName:"AlertDialogFooter"};y.__docgenInfo={description:"",methods:[]};N.__docgenInfo={description:"",methods:[]};const Be={title:"Elements/Alert Dialog",component:Y,argTypes:{},parameters:{layout:"centered"},tags:["autodocs"]},m={name:"Default",render:()=>i.createElement(Y,null,i.createElement(ve,{asChild:!0},i.createElement(x,null,"Open Dialog")),i.createElement(f,null,i.createElement(A,null,i.createElement(y,null,"Dialog Title")),i.createElement(N,null,"Dialog Description"),i.createElement(v,null,i.createElement(Ne,{asChild:!0},i.createElement(x,null,"Cancel")))))};var h,C,R;m.parameters={...m.parameters,docs:{...(h=m.parameters)==null?void 0:h.docs,source:{originalSource:`{
  name: "Default",
  render: () => <AlertDialog>
            <AlertDialogTrigger asChild>
                <Button>Open Dialog</Button>
            </AlertDialogTrigger>
            <AlertDialogContent>
                <AlertDialogHeader>
                    <AlertDialogTitle>Dialog Title</AlertDialogTitle>
                </AlertDialogHeader>
                <AlertDialogDescription>Dialog Description</AlertDialogDescription>
                <AlertDialogFooter>
                    <AlertDialogCancel asChild>
                        <Button>Cancel</Button>
                    </AlertDialogCancel>
                </AlertDialogFooter>
            </AlertDialogContent>
        </AlertDialog>
}`,...(R=(C=m.parameters)==null?void 0:C.docs)==null?void 0:R.source}}};const He=["DefaultVariant"];export{m as DefaultVariant,He as __namedExportsOrder,Be as default};
